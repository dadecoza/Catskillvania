#ifndef _CATSKILLGAME_H
#define _CATSKILLGAME_H
#include <stdbool.h>
#include <stdint.h>

enum stateMachineGame;
void setup();
void setup1();
void loop();
void loop1();
void gameLoopLogic();
void gameFrame();
void switchGameTo(enum stateMachineGame x);
void displayPause(bool state);
void drawSplashScreen();
void drawTitleScreen();
void drawPauseMenu();
void setupLoad();
void loadLogic();
void setupSave();
void saveLogic();
void checkSaveSlots();
void eraseSaveSlots(int which);
void saveGameFile(int slot);
void loadGameFile(int slot);
void setupDiffSelect();
void diffSelectLogic();
void startNewGame();
void setupGameOver();
void gameOverLogic();
void continueLevel();
void startGame();
void resumeGame();
void startNewFloor();
void setupJail();
void jailLogic();
void setupCondo(int whichFloor, int whichCondo);
void redrawMapTiles();
void drawCondoStrip(int condoStripX, int nameTableX);
void exitCondo();
void condoLogic();
void setupHallway();
void spawnIntoHallway(int windowStartCoarseX, int budStartCoarseX, int budStartFineY);
void hallwayLogic();
void spawnHallwayRobot(int spawnXpos, bool direction);
void objectLogic();
void setupElevator();
void elevatorLogic();
void setupStory();
void storyLogic();
void drawStoryScreen(int which);
void setupEnding();
void endingLogic();
int calculate_score(int time_taken, int best_time, int maximum_score);
void nextFloor();
void drawBudStats();
void budDamage();
void fallListClear();
void fallListAdd(int index);
void fallListRemove(int index);
void fallCheckRobot(int index);
void movingObjects(bool state);
int objectToTile(int g);
void budLogic2();
bool budMoveLeftC(int speed);
bool budMoveRightC(int speed);
bool condoMoveLeft(int theSpeed);
bool condoMoveRight(int theSpeed);
int windowCheckLeft(int theValue);
int windowCheckRight(int theValue);
int budTileCheck(int whereTo);
void setBudHitBox(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2);
void setBudAttackBox(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2);
void stopWatchTick();
void stopWatchClear();
int checkDoors();
int checkElevator();
void drawHallwayDoorClosed(int whichStrip, int whichDoorNum);
void drawHallwayDoorOpen(int whichStrip, int whichDoorNum);
void drawHallwayCounter(int whichStrip);
void drawHallwayCounterWindow(int whichStrip);
void drawHallwayElevator(int whichStrip);
void drawTileMap(int xPos, int yPos, uint16_t whatTile, char whatPalette, int flags);
void setTileTypeMap(int tileX, int tileY, int flags);
void setupEdit();
void populateEditCondo();
void populateEditHallway();
void populateEditDoors();
void drawEditMenuPopUp();
void updateMapFileName();
void updateMapFileNameEdit();
void saveLevel();
void loadLevel();
void editLogic();
void placeObjectInMapEdit();
int  placeObjectInMap(int xPos, int yPos, int sheetX, int sheetY, int width, int height, int palette, int dir, int category, int type);
void placeObjectInMapNumber(int xPos, int yPos, int sheetX, int sheetY, int width, int height, int palette, int dir, int category, int type, int objectNumber);
void testAnimateObjects(bool onOff);
void clearObjects();
void editorDrawObjects();
void windowTileSelect();
void drawTileSelectWindow(int startX, int startY);
void windowTileAttribute();
void drawTileSelectAttbWindow(int startY);
void windowObjectSelect();
void drawObjectSelectWindow();
void drawObjectLoadBrush(bool inMenu);
void copyToBuffer();
void pasteFromBuffer();
void redrawEditWindow();
void saveObject(int which);
void loadObject(int which);
void makeMessage(const char *text);
void clearMessage();
void gameLoop();
void gameSetup();
void go_setPos(int index, uint16_t atX, uint16_t atY);					//Sets position in world
void go_defineTiles(int index,int x1, int y1, int x2, int y2);			//Defines most objects. Calling this calcs height and width for hitboxes
void go_defineTileSingle(int index,int whichTile);						//Defines a single tile object like a Greenie
void go_setSize(int index,int theWidth, int theHeight);
void go_scan(int index,uint16_t worldX, uint16_t worldY);
bool go_hitBox(int index,int16_t x1, int16_t y1, int16_t x2, int16_t y2);
bool go_hitBoxSmall(int index,int16_t x1, int16_t y1, int16_t x2, int16_t y2);
void go_init(int index);
void playTrack(int, bool);
void quitGame();
#endif